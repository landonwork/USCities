educ + tenure + age,df)
summary(SLR_white)
# I want to see how important white is to the model
SLR_white = lm(log(totcomp) ~ white + union + married + male +
educ + tenure + age,df)
summary(SLR_white)
bptest(SLR_white)
plot(df$totcomp,resid(SLR_white))
plot(df$educ,resid(SLR_white))
plot(df$age,resid(SLR_white))
plot(df$exper,resid(SLR_white))
plot(df$white,resid(SLR_white))
plot(df$tenure,resid(SLR_white))
plot(df$tenure,resid(SLR_white))
MRM_errors = lm(resid(SLR_white) ~ white + union + married + male +
educ + tenure + age,df)
summary(MRM_errors)
bptest(SLR_white)
summary(MRM_errors)
MRM_errors = lm(resid(SLR_white)^2 ~ white + union + married + male +
educ + tenure + age,df)
summary(MRM_errors)
MRM_errors = lm(abs(resid(SLR_white)) ~ white + union + married + male +
educ + tenure + age,df)
summary(MRM_errors)
# I want to see how important white is to the model
SLR_white = lm(log(totcomp) ~ white + married + male +         #log(totcomp) works
educ + tenure,df)                #best. It has an
summary(SLR_white)                                             #R^2 of .39
MRM_errors = lm(abs(resid(SLR_white)) ~ white + married + male +
educ + tenure,df)
summary(MRM_errors)
bptest(SLR_white)
library(cars)
library(car)
library(carData)
install.packages("cars")
install.packages("CARS")
install.packages("car")
library(car)
# Okay, so heteroskedasticity is being a real pain, but we can say that white is
# probably significant to the model at the .1 alpha level at least even though
# there are few of those observations.
linearHypothesis(SLR_white,c("white=0"))
# I want to see how important white is to the model
SLR_white = lm(log(totcomp) ~ white + married + male +
educ + tenure + exper + I(exper^2),df)
summary(SLR_white)
MRM_errors = lm(abs(resid(SLR_white)) ~ white + married + male +
educ + tenure,df)
summary(MRM_errors)
bptest(SLR_white)
MRM_errors = lm(abs(resid(SLR_white)) ~ white + married + male +
educ + tenure + exper + I(exper^2),df)
summary(MRM_errors)
# I want to see how important white is to the model
SLR_white = lm(log(totcomp) ~ white + married + male +
educ + tenure,df)
summary(SLR_white)
MRM_errors = lm(abs(resid(SLR_white)) ~ white + married + male +
educ + tenure,df)
summary(MRM_errors)
bptest(SLR_white)
# So let's add more variables
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure +
annhrs + tenuresq, df)
summary(MRM_simple)
bptest(MRM_simple)
#Uh-oh again
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
annhrs + tenuresq, df)
summary(MRM_errors)
# So let's add more variables
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure +
annhrs, df)
summary(MRM_simple)
bptest(MRM_simple)
#Uh-oh again
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
annhrs, df)
summary(MRM_errors)
# So let's add more variables
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure +
I(educ^2), df)
summary(MRM_simple)
bptest(MRM_simple)
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
I(educ^2), df)
summary(MRM_errors)
# So let's add more variables
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure +
I(educ^2), df)
summary(MRM_simple)
bptest(MRM_simple)
# So let's add more variables
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure
, df)
summary(MRM_simple)
# I want to see how important white is to the model
SLR_white = lm(log(totcomp) ~ white + married + male +
educ + tenure + union,df)
summary(SLR_white)
#Two tests for heteroskedasticity
MRM_errors = lm(abs(resid(SLR_white)) ~ white + married + male +
educ + tenure + union,df)
summary(MRM_errors)
bptest(SLR_white)
install.packages("effects")
install.packages("effects")
# Okay, so heteroskedasticity is being a real pain, but we can say that white is
# probably significant to the model at the .1 alpha level at least even though
# there are few of those observations.
# I managed to control heteroskedasticity by removing age and exper from the model
linearHypothesis(SLR_white,c("white=0"))
library(wooldridge)
library(stargazer)
library(car)
library(lmtest)
library(effects)
library(corrgram)
library(dplyr)
library(dummies)
attach(df)
plot(depends, totcomp)
attach(subset(df, male = 0))
attach(subset(df, male == 0))
detach(df)
detach(subset(df, male == 0))
detach(subset(dr, male = 0))
detach(subset(df, male = 0))
# So let's add more variables
# Variables to not add: union, age, educ^2, tenuresq, annhrs
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure + depends
, df)
summary(MRM_simple)
bptest(MRM_simple)
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
depends, df)
summary(MRM_errors)
df_men = subset(df, male == 1)
df_women = subset(df, male == 0)
MRM_men = lm(log(totcomp) ~ white + married + male + educ + tenure + depends, df)
summary(MRM_men)
MRM_men = lm(log(totcomp) ~ white + married + educ + tenure + depends, df)
summary(MRM_men)
MRM_men = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_men)
summary(MRM_men)
MRM_women = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_women)
summary(MRM_women)
bptest(MRM_men)
bptest(MRM_women)
summary(MRM_men)
bptest(MRM_men)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + tenure +
depends, df)
summary(MRM_errors)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_men)
summary(MRM_men)
bptest(MRM_men)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + tenure +
depends, df)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + tenure +
depends, df_men)
summary(MRM_errors)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + exper + depends, df_men)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + exper +
depends, df_men)
summary(MRM_errors)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + exper + tenure + depends, df_men)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + exper + tenure + depends, df_men)
bptest(MRM_men)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + exper + tenure +
depends, df_men)
summary(MRM_errors)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + depends, df_men)
summary(MRM_men)
bptest(MRM_men)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + exper + tenure +
depends, df_men)
summary(MRM_errors)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ +
depends, df_men)
summary(MRM_errors)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_men)
summary(MRM_men)
bptest(MRM_men)
MRM_errors = lm(abs(resid(MRM_men)) ~ white + married + educ + tenure +
depends, df_men)
summary(MRM_errors)
#And the women
MRM_women = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_women)
summary(MRM_women)
bptest(MRM_women)
# So let's add more variables
# Variables to not add: union, age, educ^2, tenuresq, annhrs
plot(lm(totcomp~white+married+male+educ+tenure+depends,df))
# So let's add more variables
# Variables to not add: union, age, educ^2, tenuresq, annhrs
summary(lm(totcomp~white+married+male+educ+tenure+depends,df))
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure + depends, df)
summary(MRM_simple)
#Heteroskedasticity tests
bptest(MRM_simple)
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
depends, df)
summary(MRM_errors)
summary(MRM_simple)
#Here are the men
MRM_men = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_men)
summary(MRM_men)
#And the women
MRM_women = lm(log(totcomp) ~ white + married + educ + tenure + depends, df_women)
summary(MRM_women)
bptest(MRM_women)
summary(df_women)
summary(df_men)
summary(MRM_women)
summary(MRM_women)
summary(df_men)
summary(df_women)
df_smen = subset(df_men, married == 0)
df_mmen = subset(df_men, married == 1)
df_mwomen = subset(df_women, married == 1)
rm(SLR_white)
summary(df_smen)
summary(df_smen)
summary(df_mmen)
summary(df_swomen) #
df_swomen = subset(df_women, married == 0)
df_mwomen = subset(df_women, married == 1)
summary(df_swomen) #
summary(df_mwomen)
hist(df_mwomen$depends)
MRM_smen = lm(log(totcomp)~white+educ+tenure+depends,df_smen)
MRM_mmen = lm(log(totcomp)~white+educ+tenure+depends,df_mmen)
MRM_swomen = lm(log(totcomp)~white+educ+tenure+depends,df_swomen)
MRM_mwomen = lm(log(totcomp)~white+educ+tenure+depends,df_mwomen)
summary(MRM_smen)
summary(MRM_mmen)
summary(MRM_swomen)
summary(MRM_mwomen)
df_single = subset(df,married==0)
df_married = subset(df,married==1)
summary(df_single)
summary(df_married)
MRM_single = lm(log(totcomp)~white+educ+tenure+depends+male,df_single)
summary(MRM_single)
MRM_married = lm(log(totcomp)~white+educ+tenure+depends+male,df_married)
summary(MRM_married)
# Second, I need to look at a correlogram
corrgram(df)
# Creation of the dataframe used for analysis
df = select(fringe, c(annearn,exper,age,depends,married,tenure,educ,male,white,
union,annhrs,annbens,tenuresq,lannearn))
# Observations: There are some workers who aren't even out of college compared
#     to others who have been working for decades. Most people have few or no
#     kids at home. There are more married individuals than not. Most are
#     high school graduates but few have graduated college.
dim(subset(df,educ >= 15))
#     I'd say less than twenty percent of the sample have a college degree.
#     64% of the sample is male.
#     90.58% of the sample is white which means this sample will not give us
#     very reliable information about difference between races.
#     31% of the sample belongs to a union.
#     I think annhrs, annbens, tenuresq, and lannearn will be
#     useful variables to have. As would expersq and educsq and totcomp
#     I think I'd only want to work with people out of high school, so
#     I think filtering out less than 18 is a good idea. We'll
#     just assume they graduated or dropped out by that point.
df = subset(df, age >= 18)
#     About 150 people started college and didn't finish with a bachelor's.
#     I'm considering making education a dummy variable, to see if one or
#     the other makes the model better. For now, I'll leave it alone.
#     Now to set up a working model.
# First, I'm going to combine earnings and benefits to get total compensation.
df$totcomp = df$annearn + df$annbens
# So let's add more variables
# Variables to not add: union, age, educ^2, tenuresq, annhrs
summary(lm(totcomp~white+married+male+educ+tenure+depends,df))
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure + depends, df)
summary(MRM_simple)
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure + depends + annhrs, df)
summary(MRM_simple)
#Heteroskedasticity tests
bptest(MRM_simple)
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
depends, df)
MRM_errors = lm(abs(resid(MRM_simple)) ~ white + married + male + educ + tenure +
depends + annhrs, df)
summary(MRM_errors)
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure + depends, df)
summary(MRM_simple)
#Heteroskedasticity tests
bptest(MRM_simple)
# Let's go back to our model from before
MRM_simple = lm(log(totcomp)~white + educ + tenure + male + married + depends,df)
MRM_int = lm(log(totcomp)~white+educ+tenure+male+married+depends+I(married*depends),df)
summary(MRM_int)
bptest(MRM_int)
linearHypothesis(MRM_int,c("married=0","depends=0","I(married*depends)=0"))
summary(MRM_int)
linearHypothesis(MRM_int,c("married=0","depends=0","married*depends=0"))
linearHypothesis(MRM_int,c("married=0","depends=0"))
# Nothing so far. Let's put give all the terms names and then see what happens.
df$mnkids = df$depends*df$married
MRM_int = lm(log(totcomp)~white+educ+tenure+male+married+depends+mnkids,df)
summary(MRM_int)
linearHypothesis(MRM_int,c("married=0","depends=0","mnkids=0"))
linearHypothesis(MRM_simple,c("married=0","depends=0"))
# Let's go back to our model from before
MRM_simple = lm(log(totcomp)~white + educ + tenure + male + married + depends,df)
summary(MRM_simple)
bptest(MRM_int)
MRM_int = lm(log(totcomp)~white+educ+tenure+male+married+depends+mnkids,df)
summary(MRM_int)
# Let's add more interaction terms with gender in the mix
# List: male/single, male/married, female/single (benchmark), female/married
# List: male/single w/kids, male/married w/kids, etc.
# This will take a while
attach(df)
# Let's add more interaction terms with gender in the mix
# List: male/single, male/married, female/single (benchmark), female/married
# List: male/single w/kids, male/married w/kids, etc.
# This will take a while
detach(df)
df$smale = df$male * (1-df$married)
df$mmale = df$male * df$married
df$mfemale = (1-df$male) * df$married
MRM_simple = lm(log(totcomp)~white+educ+tenure+smale+mmale+mfemale+depends,df)
summary(MRM_simple)
bptest(MRM_simple)
MRM_int = lm(log(totcomp)~white+educ+tenure+smale+mmale+mfemale+depends+
I(smale*depends) + I(mmale*depends) + I(mfemale*depends),df)
summary(MRM_int)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends+exper+
I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends+exper+age+
I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+exper+
I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+exper+depends+
I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
# Well, I managed to get a negative number
bptest(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends+
I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
# Well, I managed to get a negative number
bptest(MRM_perfect)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends+tenuresq+
I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+depends+I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+I(1-male)+I(1-married)+depends+I(depends*(1-male)*(1-married)),df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends,df)
summary(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends,df)
summary(MRM_perfect)
# Well, I managed to get a negative number
bptest(MRM_perfect)
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends,df)
summary(MRM_perfect)
summary(lm(log(totcomp)~white+educ+tenure+exper+male+married+depends+I(depends*(1-male)*(1-married)),df))
# Second, I need to look at a correlogram
corrgram(df)
df_mmen = subset(df_men, married == 1)
MRM_mmen = lm(log(totcomp)~white+educ+tenure+depends,df_mmen)
df_men = subset(df, male == 1)
df_mmen = subset(df_men, married == 1)
MRM_mmen = lm(log(totcomp)~white+educ+tenure+depends,df_mmen)
summary(MRM_mmen)
setwd('~')
# And this is the best model I managed to come up with that includes depends
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends,df)
library(wooldridge)
library(stargazer)
library(car)
library(lmtest)
library(effects)
library(corrgram)
library(dplyr)
library(dummies)
library(tidyverse)
# And this is the best model I managed to come up with that includes depends
MRM_perfect = lm(log(totcomp)~white+educ+tenure+male+married+depends,df)
# Creation of the dataframe used for analysis
df = select(fringe, c(annearn,exper,age,depends,married,tenure,educ,male,white,
union,annhrs,annbens,tenuresq,lannearn))
#     I'd say less than twenty percent of the sample have a college degree.
#     64% of the sample is male.
#     90.58% of the sample is white which means this sample will not give us
#     very reliable information about difference between races.
#     31% of the sample belongs to a union.
#     I think annhrs, annbens, tenuresq, and lannearn will be
#     useful variables to have. As would expersq and educsq and totcomp
#     I think I'd only want to work with people out of high school, so
#     I think filtering out less than 18 is a good idea. We'll
#     just assume they graduated or dropped out by that point.
df = subset(df, age >= 18)
# First, I'm going to combine earnings and benefits to get total compensation.
# I think this will be a better reflection of the earning potential of each
# worker in the sample
df$totcomp = df$annearn + df$annbens
MRM_simple = lm(log(totcomp) ~ white + married + male + educ + tenure + depends, df)
MRM_simple = lm(log(totcomp) ~ white + educ + tenure + male + married + I(male*married) + depends, df)
summary(MRM_simple)
# And this is the best model I managed to come up with that includes depends
MRM_perfect = lm(log(totcomp) ~ white + educ + tenure + male + married + depends, df)
summary(MRM_perfect)
# Well, I managed to get a negative number
bptest(MRM_perfect)
summary(MRM_perfect)
View(MRM_perfect)
coefficients(MRM_perfect)$depends
coefficients(MRM_perfect)
type(coefficients(MRM_perfect))
class(coefficients(MRM_perfect))
coefficients(MRM_perfect)["depends"]
coef1 = coefficients(MRM_perfect)["depends"]
se = 0.015197
ci = c(coef1-2*se,coef1+2*se)
ci
ci = c(coef1-3*se,coef1+3*se)
ci
df = read.csv('city_nums.csv')
df = read.csv('C:\Users\landon\Desktop\Python\city_nums.csv')
df = read.csv('C:\\Users\landon\Desktop\Python\city_nums.csv')
df = read.csv('C:/Users/landon/Desktop/Python/city_nums.csv')
df = read.csv('C:/Users/lando/Desktop/Python/city_nums.csv')
import ggplot2
qplot(df['population'])
ggplot()
ggplot.ggplot()
plot(df['population'])
plot(df['population'],df['male-population'])
df.columns
plot(df['population'],df['male.population'])
column = 'population'
plot(df[column],main=column)
plot(df[column],main=column,type='p',col='blue')
plot(df[column],main=column,col='blue')
library(corrgram)
corrgram(df)
corrgram(df, upper.panel = panel.pie)
df['white.percent'] = df['white.population']/df['population']
df['white.percent'] = df['white.population']/df['population']
df['black.percent'] = df['black.population']/df['population']
df['hispanic.percent'] = df['hispanic.population']/df['population']
df['asian.percent'] = df['asian.population']/df['population']
l = ['population','something']
l = c('population','pov.level','median.age.float','household.income','average.income','median.rent.float','pop.density','white.percent','black.percent','hispanic.percent','asian.percent','gini.index')
corrgram(df[l],upper.panel=panel.pie)
df['foreign.percent']=df['foreign.born']/df['population']
write.csv(df,file_path)
file_path = 'C:/Users/lando/Desktop/Python/city_nums.csv'
write.csv(df,file_path)
#Binomial test
library(stats)
binom.test(c(1,10))
binom.test(c(10,100))
binom.test(c(100,1000))
dat = matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE)
fisher.test(dat)
dat = matrix(c(1,2,3,4),2,2,TRUE)
mcnemar.test(dat)
dat = matrix(c(11,2,37,-4),2,2,TRUE)
mcnemar.test(dat)
dat = matrix(c(11,2,37,114),2,2,TRUE)
mcnemar.test(dat)
setwd("C:/Users/lando/Desktop/Python/City Data")
df = read.csv('C:/Users/lando/Desktop/Python/suicide-rate-by-county.csv')
library(corrgram)
df = read.csv('C:/Users/lando/Desktop/Python/suicide-rate-by-county.csv')
df = read.csv('C:/Users/lando/Desktop/Python/City Data/suicide-rate-by-county.csv')
column = 'suicide-rate'
plot(df[column],main=column,col='blue')
column = 'suicide.rate'
plot(df[column],main=column,col='blue')
corrgram(df, upper.panel = panel.pie)
library(stargazer)
stargazer(df)
stargazer(df,'text')
stargazer(df,latex=false)
stargazer(df,latex='false')
stargazer(df,print='text')
stargazer(df,out='text')
stargazer?
help(stargazer)
stargazer(df,type='text')
model = lm(percent.female+feel.bad+pop.density+obesity.rate+elevation+lat,df)
model = lm('percent.female'+feel.bad+pop.density+obesity.rate+elevation+lat,df)
model = lm('percent.female'+'feel.bad'+'pop.density'+'obesity.rate'+'elevation'+'lat',df)
model = lm('percent.female+feel.bad+pop.density+obesity.rate+elevation+lat',df)
model = lm(percent.female+feel.bad+pop.density+obesity.rate+elevation+lat,data=df)
corrgram(df, upper.panel = panel.pie, lower.panel = panel.pts)
corrgram(df, upper.panel = panel.pie, lower.panel = panel.density)
corrgram(df, upper.panel = panel.pie, lower.panel = panel.smooth)
